name: CI/CD for Electron App  

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16  # Use the Node.js version compatible with your Electron app

      # Cache Node.js modules
      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Install dependencies
      - name: Install Dependencies
        run: npm install

      # Build the app
      - name: Build and Package Electron App
  run: npm run dist
  env:
    GH_TOKEN: ${{ secrets.GH_TOKEN }}


      # Package the app with Electron Builder
      - name: Package App
        run: npm run dist

      # Upload packaged artifacts (optional)
      - name: Upload Packaged App
        uses: actions/upload-artifact@v3
        with:
          name: electron-app
          path: dist/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      # Deploy logic here
      # Example: Upload the app to a storage service or GitHub Releases
      - name: Deploy Electron App
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: dist/*.*
          tag: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}
          draft: false

